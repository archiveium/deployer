version: '3.8'

services:
  app:
    image: archiveium/archiveium:0.1.5
    ports:
      - '5292:80'
    volumes:
      - app_storage:/var/www/html/storage
      - .env:/var/www/html/.env
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/login"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - archiveium
    depends_on:
      - db

  jobber:
    image: archiveium/jobber:0.0.7
    volumes:
      # Enable mount when jobber has logic 
      # to put logs under /logs directory
      # - logs:/app/logs
      - jobber_production.json:/app/config/production.json
    networks:
      - archiveium
    depends_on:
      - app
      - db

  db:
    image: 'postgres:13'
    ports:
      - '5432:5432'
    environment:
      PGPASSWORD: "$DB_PASSWORD"
      POSTGRES_DB: "$DB_DATABASE"
      POSTGRES_USER: "$DB_USERNAME"
      POSTGRES_PASSWORD: "$DB_PASSWORD"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - archiveium
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}"]
      retries: 3
      timeout: 5s

  minio:
    image: 'minio/minio:RELEASE.2022-09-25T15-44-53Z'
    ports:
      - '${FORWARD_MINIO_PORT:-9000}:9000'
    environment:
      MINIO_ROOT_USER: '$MINIO_USER'
      MINIO_ROOT_PASSWORD: '$MINIO_PASSWORD'
      MINIO_COMPRESSION_ENABLE: 'on'
      MINIO_COMPRESSION_EXTENSIONS: ''
      MINIO_COMPRESSION_MIME_TYPES: ''
    volumes:
      - minio_data:/data/minio
    networks:
      - archiveium
    entrypoint: sh
    command: -c 'mkdir -p /data/minio/emails && minio server /data/minio'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      retries: 3
      timeout: 5s

volumes:
  db_data:
  app_storage:
  minio_data:

networks:
  archiveium: